name: Rust

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  CARGO_TERM_COLOR: always
  SERVICE_APP_HOST: "127.0.0.1"
  SERVICE_APP_PORT: "8080"
  DB_HOST: "localhost"
  DB_PORT: "5432"
  POSTGRES_PASSWORD: postgres
  POSTGRES_USER: postgres
  POSTGRES_DB: postgres

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:17
        env:
          POSTGRES_USER: ${{ env.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ env.POSTGRES_DB }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4

      - name: Create .env file
        run: |
          cat > .env << EOF
          SERVICE_APP_HOST=${{ env.SERVICE_APP_HOST }}
          SERVICE_APP_PORT=${{ env.SERVICE_APP_PORT }}
          DB_HOST=${{ env.DB_HOST }}
          DB_PORT=${{ env.DB_PORT }}
          POSTGRES_PASSWORD=${{ env.POSTGRES_PASSWORD }}
          POSTGRES_USER=${{ env.POSTGRES_USER }}
          POSTGRES_DB=${{ env.POSTGRES_DB }}
          EOF

      - name: Cache Rust dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Build
        run: cargo build

      - name: Run tests
        run: cargo test
